plugins {
//    id 'org.springframework.boot' version '2.3.3.RELEASE'
    id 'org.springframework.boot' version '2.1.5.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id "com.commercehub.gradle.plugin.avro" version "0.16.0"
//    id "org.jetbrains.intellij" version "0.4.22"
    id 'java'
}

group = 'com.puglieseweb.core'
version = '0.0.1-SNAPSHOT'
description = 'kafka-avro'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven {
        url "https://packages.confluent.io/maven/"
    }
}

ext {
    set('springCloudVersion', "Hoxton.SR8")
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.kafka:spring-kafka'
    compile 'io.confluent:kafka-schema-registry-client:5.3.0'
    compile 'org.apache.avro:avro:1.8.2'
    compile 'io.confluent:kafka-avro-serializer:5.3.0'
    compile 'io.confluent:monitoring-interceptors:5.3.0'
    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'org.springframework.kafka:spring-kafka-test'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform()
}

// configuring plugin for generating Java classes for Avro Schema 

avro {
    createSetters = false
    fieldVisibility = "PRIVATE"
}
